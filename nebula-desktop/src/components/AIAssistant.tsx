import { useState } from 'react'
import { motion } from 'framer-motion'
import { 
  SparklesIcon, 
  PaperAirplaneIcon,
  LightBulbIcon,
  ChartBarIcon,
  HeartIcon,
  MapPinIcon,
  TruckIcon,
  BuildingOfficeIcon
} from '@heroicons/react/24/outline'

interface Message {
  id: number
  text: string
  isUser: boolean
  timestamp: Date
}

export default function AIAssistant() {
  const [messages, setMessages] = useState<Message[]>([
    {
      id: 1,
      text: "–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ Nebula. –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º–∏, –ø–∏—Ç–∞–Ω–∏–µ–º, –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è–º–∏ –∏ –º–Ω–æ–≥–∏–º –¥—Ä—É–≥–∏–º. –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
      isUser: false,
      timestamp: new Date()
    }
  ])
  const [inputText, setInputText] = useState('')
  const [isTyping, setIsTyping] = useState(false)

  const quickActions = [
    { title: '–ü–æ–¥–æ–±—Ä–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É', icon: ChartBarIcon, color: 'from-green-500 to-emerald-500' },
    { title: '–°–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–∞—Ü–∏–æ–Ω', icon: HeartIcon, color: 'from-red-500 to-orange-500' },
    { title: '–ù–∞–π—Ç–∏ –æ—Ç–µ–ª—å', icon: BuildingOfficeIcon, color: 'from-blue-500 to-cyan-500' },
    { title: '–ó–∞–∫–∞–∑–∞—Ç—å —Ç–∞–∫—Å–∏', icon: TruckIcon, color: 'from-purple-500 to-pink-500' },
    { title: '–ü–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–æ–µ–∑–¥–∫—É', icon: MapPinIcon, color: 'from-indigo-500 to-purple-500' },
    { title: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã', icon: LightBulbIcon, color: 'from-yellow-500 to-orange-500' }
  ]

  const sendMessage = async () => {
    if (!inputText.trim()) return

    const userMessage: Message = {
      id: messages.length + 1,
      text: inputText,
      isUser: true,
      timestamp: new Date()
    }

    setMessages(prev => [...prev, userMessage])
    setInputText('')
    setIsTyping(true)

    // Simulate AI response
    setTimeout(() => {
      const aiResponse: Message = {
        id: messages.length + 2,
        text: generateAIResponse(),
        isUser: false,
        timestamp: new Date()
      }
      setMessages(prev => [...prev, aiResponse])
      setIsTyping(false)
    }, 1500)
  }

  const generateAIResponse = (): string => {
    const responses = [
      "–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º —ç—Ç–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
      "–Ø –ø–æ–Ω–∏–º–∞—é –≤–∞—à—É –∑–∞–¥–∞—á—É. –£ –º–µ–Ω—è –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –¥–ª—è –≤–∞—Å.",
      "–≠—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Ç–µ–º–∞! –ü–æ–∑–≤–æ–ª—å—Ç–µ –º–Ω–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.",
      "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–æ–ø—Ä–æ—Å! –í–æ—Ç —á—Ç–æ —è –º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ —ç—Ç–æ–º—É –ø–æ–≤–æ–¥—É.",
      "–û—Ç–ª–∏—á–Ω–∞—è –∏–¥–µ—è! –î–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ –Ω–∞–π–¥–µ–º –ª—É—á—à–µ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –≤–∞—Å."
    ]
    return responses[Math.floor(Math.random() * responses.length)]
  }

  const handleQuickAction = (action: string) => {
    const message: Message = {
      id: messages.length + 1,
      text: `–•–æ—á—É ${action.toLowerCase()}`,
      isUser: true,
      timestamp: new Date()
    }
    setMessages(prev => [...prev, message])
    setInputText('')
    setIsTyping(true)

    setTimeout(() => {
      const aiResponse: Message = {
        id: messages.length + 2,
        text: `–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π—Ç–µ –ø–æ–¥–±–µ—Ä–µ–º –¥–ª—è –≤–∞—Å ${action.toLowerCase()}. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –±–æ–ª—å—à–µ –æ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è—Ö.`,
        isUser: false,
        timestamp: new Date()
      }
      setMessages(prev => [...prev, aiResponse])
      setIsTyping(false)
    }, 1000)
  }

  return (
    <div className="space-y-6">
      {/* Header */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="nebula-card"
      >
        <div className="text-center">
          <h1 className="text-3xl font-bold text-gradient mb-2">ü§ñ –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ Nebula</h1>
          <p className="text-gray-300 text-lg">–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å–ø–æ—Ä—Ç–∞, –∑–¥–æ—Ä–æ–≤—å—è –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π</p>
        </div>
      </motion.div>

      {/* Quick Actions */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {quickActions.map((action, index) => (
          <motion.button
            key={action.title}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: index * 0.1 }}
            onClick={() => handleQuickAction(action.title)}
            whileHover={{ scale: 1.02 }}
            whileTap={{ scale: 0.98 }}
            className={`p-4 rounded-xl bg-gradient-to-r ${action.color} text-white hover:shadow-lg transition-all duration-200`}
          >
            <div className="flex items-center space-x-3">
              <action.icon className="w-6 h-6" />
              <span className="font-medium">{action.title}</span>
            </div>
          </motion.button>
        ))}
      </div>

      {/* Chat Interface */}
      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        {/* Chat */}
        <div className="lg:col-span-2 nebula-card">
          <div className="flex items-center space-x-3 mb-4">
            <div className="w-10 h-10 rounded-full bg-gradient-to-r from-purple-500 to-pink-500 flex items-center justify-center">
              <SparklesIcon className="w-6 h-6 text-white" />
            </div>
            <div>
              <h3 className="font-semibold text-white">–ß–∞—Ç —Å –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫–æ–º</h3>
              <p className="text-sm text-gray-400">–û–Ω–ª–∞–π–Ω –∏ –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å</p>
            </div>
          </div>

          {/* Messages */}
          <div className="h-96 overflow-y-auto space-y-4 mb-4 scrollbar-hide">
            {messages.map((message) => (
              <motion.div
                key={message.id}
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                className={`flex ${message.isUser ? 'justify-end' : 'justify-start'}`}
              >
                <div className={`max-w-xs lg:max-w-md px-4 py-2 rounded-2xl ${
                  message.isUser 
                    ? 'bg-gradient-to-r from-nebula-500 to-cosmic-500 text-white' 
                    : 'bg-gray-800/50 text-gray-100'
                }`}>
                  <p className="text-sm">{message.text}</p>
                  <p className="text-xs opacity-70 mt-1">
                    {message.timestamp.toLocaleTimeString()}
                  </p>
                </div>
              </motion.div>
            ))}
            
            {isTyping && (
              <motion.div
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                className="flex justify-start"
              >
                <div className="bg-gray-800/50 px-4 py-2 rounded-2xl">
                  <div className="flex space-x-1">
                    <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce"></div>
                    <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
                    <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
                  </div>
                </div>
              </motion.div>
            )}
          </div>

          {/* Input */}
          <div className="flex space-x-2">
            <input
              type="text"
              value={inputText}
              onChange={(e) => setInputText(e.target.value)}
              onKeyPress={(e) => e.key === 'Enter' && sendMessage()}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å..."
              className="flex-1 px-4 py-2 bg-gray-800/50 border border-gray-700/50 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-nebula-500 focus:border-transparent"
            />
            <motion.button
              onClick={sendMessage}
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              className="px-4 py-2 bg-gradient-to-r from-nebula-500 to-cosmic-500 text-white rounded-xl hover:shadow-lg transition-all duration-200"
            >
              <PaperAirplaneIcon className="w-5 h-5" />
            </motion.button>
          </div>
        </div>

        {/* AI Features */}
        <div className="space-y-4">
          <motion.div
            initial={{ opacity: 0, x: 20 }}
            animate={{ opacity: 1, x: 0 }}
            className="nebula-card"
          >
            <h3 className="text-lg font-semibold text-white mb-3">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ò–ò</h3>
            <div className="space-y-3">
              <div className="flex items-center space-x-3">
                <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                <span className="text-sm text-gray-300">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</span>
              </div>
              <div className="flex items-center space-x-3">
                <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                <span className="text-sm text-gray-300">–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö</span>
              </div>
              <div className="flex items-center space-x-3">
                <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                <span className="text-sm text-gray-300">–£–º–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏</span>
              </div>
              <div className="flex items-center space-x-3">
                <div className="w-2 h-2 bg-orange-500 rounded-full"></div>
                <span className="text-sm text-gray-300">–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ</span>
              </div>
            </div>
          </motion.div>

          <motion.div
            initial={{ opacity: 0, x: 20 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ delay: 0.2 }}
            className="nebula-card bg-gradient-to-r from-purple-500/20 to-pink-500/20 border-purple-500/30"
          >
            <h3 className="text-lg font-semibold text-white mb-3">–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏</h3>
            <div className="space-y-2 text-sm text-gray-300">
              <p>‚Ä¢ Apple Watch</p>
              <p>‚Ä¢ Garmin</p>
              <p>‚Ä¢ Samsung Health</p>
              <p>‚Ä¢ Fitbit</p>
            </div>
          </motion.div>
        </div>
      </div>
    </div>
  )
}
